/*
 * Copyright (C) 2009 GeoNetwork
 *
 * This file is part of GeoNetwork
 *
 * GeoNetwork is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GeoNetwork is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GeoNetwork.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * @requires GeoNetwork/windows/BaseWindow.js
 */ 

Ext.namespace('GeoNetwork');

/**
 * Class: IlwacInfoWindow
 *      Window to display all the ilwac information board on a punctual site (derives from a getFeatureInfo)
 *
 * Inherits from:
 *  - {GeoNetwork.BaseWindow}
 */

/**
 * Constructor: GeoNetwork.IlwacInfoWindow
 * Create an instance of GeoNetwork.IlwacInfoWindow
 *
 * Parameters:
 * config - {Object} A config object used to set the ilwacinfowindow
 *     window's properties.
 */
GeoNetwork.IlwacInfoWindow = function(config) {
    Ext.apply(this, config);
    GeoNetwork.IlwacInfoWindow.superclass.constructor.call(this);
};

Ext.extend(GeoNetwork.IlwacInfoWindow, GeoNetwork.BaseWindow, {

	control: null,
	centerpanel:null,

    /**
     * Method: init
     *     Initialize this component.
     */
    initComponent: function() {
        GeoNetwork.IlwacInfoWindow.superclass.initComponent.call(this);

        this.title = this.title || OpenLayers.i18n("IlwacInfoWindow.windowTitle");

        this.width = 600;
        this.height = 250;

        centerpanel = new Ext.Panel({
        	layout	:'fit'
        	,id		:'ilwacinfocenterpanel'
        	,title	:'ouaip!'
        	,html	:'On mettra ici les données ilwac'
        });
        this.add(centerpanel);

        this.doLayout();
    },

    setLonLat: function(lon,lat) {
    	var dataurl = 'http://jean.localhost/sigdt-config/ilwac_json_getPunctualData-0.1.php?tables=v_1c4_pop_urb_rur_reg,v_1c4_pop_urb_rur_cer&fields=poprur,popurb&geom_field=the_geom&lon='+lon+'&lat='+lat;
    	var store = new Ext.data.JsonStore({
    	    // store configs
    	    autoDestroy: true,
    	    autoLoad:true,
    	    url: dataurl,
    	    storeId: 'ilwacinfoStore',
    	    // reader configs
    	    root: 'features',
    	    idProperty: 'id',
    	    fields: ['id', 'poprur', 'popurb', 'table']
    	});
    	window.jpstore = store;
    	centerpanel.removeAll(false);
    	centerpanel.add({
            store: store,
            xtype: 'piechart',
            dataField: 'poprur',
            categoryField: 'id',
            //extra styles get applied to the chart defaults
            extraStyle:
            {
                legend:
                {
                    display: 'bottom',
                    padding: 5,
                    font:
                    {
                        family: 'Tahoma',
                        size: 13
                    }
                }
            }
        });
    	centerpanel.doLayout();
    	//console.log(store);
    	/*centerpanel.load({
    	    url: 'http://jean.localhost/sigdt-config/ilwac_json_getPunctualData.php?tables=v_1c4_pop_urb_rur_reg,v_1c4_pop_urb_rur_cer&fields=poprur,popurb&geom_field=the_geom&lon=-2&lat=17',
    	    params: {}, // or a URL encoded string
    	    callback: this.updateContent,
    	    scope: this, // optional scope for the callback
    	    discardUrl: false,
    	    nocache: false,
    	    text: 'Loading...',
    	    timeout: 30,
    	    scripts: false
    	});*/
    	//centerpanel.body.update("Store updated <br />coordonnées : " + lon +", "+lat);
    },
    
    updateContent:function() {
    	console.log('updated');
    	//centerpanel.body.update("<br />coordonnées : " + lon +", "+lat);
    },

    setMap: function(map) {
    }

});
